# efficient bash_history. ignoreboth is actually just like doingignorespace
# ignorespace:ignoredups and that along with erasedups gets the job done
export HISTCONTROL=ignoreboth:erasedups
PROMPT_COMMAND="history -a;$PROMPT_COMMAND" # realtime bash history

# fzf
export FZF_DEFAULT_COMMAND='fd --type f -a'
export FZF_CTRL_T_COMMAND='fd --type f -a'
export FZF_ALT_C_COMMAND='fd --type d -a'
source /usr/share/fzf/completion.bash
source /usr/share/fzf/key-bindings.bash

# System
export EDITOR="nvim"
alias S="sudo"
alias upmir="sudo reflector -p http,https -f 7 -l 15 --save /etc/pacman.d/mirrorlist"
alias b="chezmoi edit --apply ~/.bashrc"
alias bs="source ~/.bashrc"
alias ch="chezmoi"

# dir
alias l="ls --color"
alias la="ls -a --color"
alias ep="explorer.exe ."
alias h="cd ~"
alias r="cd ~/repo"
mkcdir() {
  mkdir "$1"
  cd "$1"
}

# nodejs
alias p="pnpm"

# ultralist
alias u="ultralist"
alias uf="ultralist list | fzf"
alias ul="ultralist list --notes status:-pending"
alias ulpe="ultralist list --notes status:pending"
alias ulp="ultralist list --notes priority:true"
uls() {
  script -eqc "ultralist list" /dev/null | sort -t + -k2,2
}

# exercism
alias exercism="ex"
exd() {
  ex download -e "$1" -t "$2"
}

# zoxide
eval "$(zoxide init bash)"

# tmux
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
  exec tmux
fi

# prompt
eval "$(starship init bash)"
